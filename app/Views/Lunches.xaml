<!--
Copyright (c) Microsoft Corporation.  All rights reserved.
The MIT License (MIT)
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<Page x:Class="LunchScheduler.App.Views.Lunches"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:c="using:LunchScheduler.App.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:dm="using:LunchScheduler.Models"
      xmlns:local="using:LunchScheduler.App.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:LunchScheduler.App.ViewModels"
      mc:Ignorable="d">
    <Page.DataContext>
        <vm:LunchesViewModel x:Name="ViewModel" />
    </Page.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="Phone">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <ListView ItemsSource="{Binding Lunches, Mode=TwoWay}" SelectedItem="{Binding SelectedLunch, Mode=TwoWay}">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="dm:Lunch">
                    <StackPanel>
                        <TextBlock Margin="5"
                                   FontSize="24"
                                   Text="{x:Bind Name}" />
                        <TextBlock Margin="5,5,5,5"
                                   FontSize="24"
                                   Text="{x:Bind Location.Name}" />
                        <TextBlock Margin="5,5,5,5"
                                   FontSize="24"
                                   Text="{x:Bind FormattedTime}" />
                        <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                      HorizontalScrollMode="Auto"
                                      VerticalScrollBarVisibility="Disabled"
                                      VerticalScrollMode="Disabled">
                            <GridView x:Name="InviteesGridView"
                                      Margin="5,5,5,5"
                                      ItemsSource="{x:Bind Invites}"
                                      ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                <GridView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <ItemsWrapGrid x:Name="LunchesGrid"
                                                       MaximumRowsOrColumns="1"
                                                       Orientation="Vertical"
                                                       ScrollViewer.HorizontalScrollBarVisibility="Auto" />
                                    </ItemsPanelTemplate>
                                </GridView.ItemsPanel>
                                <GridView.ItemTemplate>
                                    <DataTemplate x:DataType="dm:Invite">
                                        <c:UserIconControl PhotoUrl="{x:Bind User.PhotoUrl}"
                                                    ResponseMark="{x:Bind Response, Mode=TwoWay}"
                                                    UserName="{x:Bind User.Name}" />
                                    </DataTemplate>
                                </GridView.ItemTemplate>
                            </GridView>
                        </ScrollViewer>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <StackPanel Margin="0,0,0,50" VerticalAlignment="Center">
            <TextBlock Margin="0,0,0,10"
                       HorizontalAlignment="Center"
                       FontSize="200"
                       Text=":("
                       Visibility="{Binding NoLunchesStringVisibility,
                                            Mode=OneWay}" />
            <TextBlock Margin="10,0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="You don't have lunches right now. Send one by tapping '+'!"
                       TextAlignment="Center"
                       TextWrapping="WrapWholeWords"
                       Visibility="{Binding NoLunchesStringVisibility,
                                            Mode=OneWay}" />
        </StackPanel>

    </Grid>
    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton Click="{x:Bind ViewModel.NewLunch}"
                          Icon="Add"
                          Label="New lunch" />
            <AppBarButton Click="{x:Bind ViewModel.Accept}"
                          Icon="Accept"
                          Label="Accept"
                          Visibility="{Binding ResponseButtonVisibility}" />
            <AppBarButton Click="{x:Bind ViewModel.Decline}"
                          Icon="Cancel"
                          Label="Decline"
                          Visibility="{Binding ResponseButtonVisibility}" />
        </CommandBar>
    </Page.BottomAppBar>
</Page>